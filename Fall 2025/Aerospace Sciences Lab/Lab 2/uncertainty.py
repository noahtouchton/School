from rss import RSS, Data
import numpy as np

inH2O_to_Pa = 249.0889

equations = [
    "q = (m*dp+b) * 249.0889",
    "mu = MU_0 * (T / T_0)**(3/2) * (T_0 + C) / (T + C)",
    "Re = (d/mu) * sqrt( (2*q*P) / (R*T) )",
    "Cp = deltaP/q"

]

pcyl_pwall35 = np.array([
    -1.102, -1.472, -1.470, -1.349, -1.277, -1.252, -1.275, -1.273, -1.300,
    -1.326, -1.357, -1.320, -1.411, -1.430, -1.385, -1.363, -1.324, -1.326,
    -1.292, -1.266, -1.233, -1.250, -1.328, -1.461, -1.445, -1.115, -0.554,
     0.056,  0.573,  0.966,  1.145,  1.144,  0.965,  0.550,  0.018, -0.588,
    -1.112
])

rss_uncertainty35 = np.array([
    0.150545674, 0.154324334, 0.173366663, 0.200339711, 0.194535344,
    0.175282629, 0.165722660, 0.200339711, 0.169540556, 0.192603219,
    0.225610283, 0.237326779, 0.239282260, 0.221711524, 0.215870331,
    0.210038092, 0.204215572, 0.182964477, 0.177200451, 0.163816971,
    0.173366663, 0.184889156, 0.200339711, 0.210038092, 0.173366663,
    0.143024473, 0.143024473, 0.148660687, 0.143024473, 0.137419067,
    0.139283883, 0.144899965, 0.150545674, 0.141152400, 0.150545674,
    0.150545674, 0.143024473
])


pcyl_pwall55 = np.array([
    -3.407, -4.476, -4.505, -4.164, -3.827, -3.829, -3.868, -3.948, -4.037,
    -4.087, -4.230, -4.142, -4.474, -4.304, -4.255, -4.157, -4.158, -3.974,
    -3.916, -3.840, -3.771, -3.777, -4.085, -4.438, -4.308, -3.255, -1.619,
     0.147,  1.704,  2.862,  3.395,  3.395,  2.812,  1.617, -0.019, -1.830,
    -3.424
])

rss_uncertainty55 = np.array([
    0.182964477, 0.194535344, 0.217816436, 0.339699868, 0.249070271,
    0.243195395, 0.310058059, 0.262800304, 0.306111091, 0.381292539,
    0.351573605, 0.474640917, 0.442831797, 0.532353266, 0.361474757,
    0.363455637, 0.290337734, 0.325858865, 0.321906819, 0.278524685,
    0.270658456, 0.286398324, 0.359494089, 0.256912436, 0.211981131,
    0.167630546, 0.167630546, 0.133701159, 0.146778745, 0.137419067,
    0.141152400, 0.141152400, 0.141152400, 0.135558106, 0.143024473,
    0.150545674, 0.160012500
])

MU_0 = Data("mu not", "MU_0", 1.716 * 10**-5, 0.0)
T_0 = Data("T not", "T_0", 273, 0.0)
C = Data("Constant", "C",111.0, 0.0)
T = Data("Temperature", "T", 23 + 273.15, 0.4)
P = Data("Pressure", "P", 101300, 400.0)
d = Data("Diameter", "d", 0.01905, 0.0)
R = Data("Ideal Gas Constant for Air", "R", 287.05, 0.0)

m = Data("Calibration Slope", "m", 0.5713, 0.025106)
b = Data("Calibration Intercept", "b", -0.296, 0.121)
dp35 = Data("Pressure change 35", "dp", 2.701, 0.146778745)
dp55 = Data("Pressure change 55", "dp", 6.868, 0.156217797)
deltaP35 = Data("Pcyl-Pwall35", "deltaP", inH2O_to_Pa*pcyl_pwall35, inH2O_to_Pa*rss_uncertainty35)
deltaP55 = Data("Pcyl-Pwall55", "deltaP", inH2O_to_Pa*pcyl_pwall55, inH2O_to_Pa*rss_uncertainty55)


q35 = RSS(
    "Dynamic Pressure 35",
    equations[0],
    [m,b,dp35]
)

q35.get_description()

q55 = RSS(
    "Dynamic Pressure 55",
    equations[0],
    [m,b,dp55]
)

q55.get_description()

mu = RSS(
    "Dynamic Viscosity",
    equations[1],
    [T, MU_0, T_0, C] 
)

mu.get_description()

Re35 = RSS(
    "Reynolds Number 35",
    equations[2],
    [d,mu,q35,P,R,T]
)

Re35.get_description()

Re55 = RSS(
    "Reynolds Number 55",
    equations[2],
    [d,mu,q55,P,R,T]
)

Re55.get_description()

Cp35 = RSS(
    "Cp35",
    equations[3],
    [deltaP35,q35]
)
Cp35.get_description()

Cp35.print_to_excel()

Cp55 = RSS(
    "Cp55",
    equations[3],
    [deltaP55,q55]
)
Cp55.get_description()

Cp55.print_to_excel()